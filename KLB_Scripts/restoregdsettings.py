import xbmc , xbmcaddon , xbmcgui , xbmcplugin , os
import shutil
import zipfile
oo000 = sys . version_info [ 0 ] >= 3
if ( oo000 ) :
 from io import StringIO
else :
 from StringIO import StringIO
import gzip
import requests
import io
import tempfile
import threading
if 9 - 9: Ii . o0o00Oo0O - iI11I1II1I1I
import pyxbmct
#import extract
if 71 - 71: ii
global iIIii1IIi , o0OO00 , oo , i1iII1IiiIiI1 , iIiiiI1IiI1I1 , o0OoOoOO00 , I11i , O0O
if 78 - 78: i11ii11iIi11i . oOoO0oo0OOOo + IiiI / Iii1ii1II11i
if 10 - 10: I1iII1iiII + I1Ii111 / OOo
o0OoOoOO00 = 'script.kelebek'
if 41 - 41: I1II1
import six
if six . PY3 :
 import zipfile
elif six . PY2 :
 if 100 - 100: iII1iII1i1iiI % iiIIIII1i1iI % iiI11iii111 % i1I1Ii1iI1ii
 from lib import zipfile
 if 11 - 11: OOoO / ooo0Oo0 * i1 - OOooo0000ooo
I11i = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + o0OoOoOO00 , 'icon.png' ) )
O0O = xbmc . translatePath ( os . path . join ( 'special://home/addons' , o0OoOoOO00 , 'resources' ) )
if 79 - 79: iII1iII1i1iiI + i1 . OOooo0000ooo * ooo0Oo0 % iiI11iii111 . IiiI
def i1iII1IiiIiI1 ( message , seconds ) :
 xbmc . executebuiltin ( 'XBMC.Notification(%s, %s, %s, %s)' % ( 'KELEBEK' , message , str ( seconds ) , I11i ) )
 if 94 - 94: OOoO * i1I1Ii1iI1ii / ooo0Oo0 . i11ii11iIi11i * OOoO
def iIiiiI1IiI1I1 ( message , seconds ) :
 iiiii11iII1 = threading . Thread ( target = i1iII1IiiIiI1 , args = ( message , seconds ) )
 iiiii11iII1 . start ( )
 if 54 - 54: OOooo0000ooo . OOooo0000ooo / iI11I1II1I1I / iiI11iii111 + iII1iII1i1iiI / OOo
class iIIii1IIi ( pyxbmct . AddonDialogWindow ) :
 def __init__ ( self , title = '' ) :
  super ( iIIii1IIi , self ) . __init__ ( title )
  self . setGeometry ( 750 , 250 , 4 , 5 )
  self . set_controls ( )
  self . set_navigation ( )
  if 39 - 39: iiI11iii111 / i1 . iiI11iii111 - iiI11iii111
  self . connect ( pyxbmct . ACTION_NAV_BACK , self . close )
  if 68 - 68: iiIIIII1i1iI . IiiI / OOoO
 def set_controls ( self ) :
  if 72 - 72: I1iII1iiII / I1iII1iiII
  self . fondo = pyxbmct . Image ( os . path . join ( O0O , 'fondoceleste.png' ) )
  self . placeControl ( self . fondo , 0 , 0 , 4 , 5 )
  if 30 - 30: I1iII1iiII
  OOoOooOOOOOo = pyxbmct . Label ( 'Restore GDrive APIS' , alignment = pyxbmct . ALIGN_CENTER )
  self . placeControl ( OOoOooOOOOOo , 0 , 0 , 1 , 5 )
  if 48 - 48: ii % OOo . IiiI - i1I1Ii1iI1ii % i11ii11iIi11i % ii
  if 3 - 3: OOoO + o0o00Oo0O
  self . brestaura = pyxbmct . Button ( 'Restaurar Local' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . brestaura , 1 , 0 , 1 , 2 )
  if 42 - 42: iiIIIII1i1iI / i11ii11iIi11i + Ii - i1I1Ii1iI1ii
  self . connect ( self . brestaura , self . restaura )
  if 78 - 78: I1iII1iiII
  self . bbaja = pyxbmct . Button ( 'Restaurar de la Nube' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . bbaja , 1 , 3 , 1 , 2 )
  if 18 - 18: o0o00Oo0O - OOoO / OOoO + OOooo0000ooo % OOooo0000ooo - ooo0Oo0
  self . connect ( self . bbaja , self . baja )
  self . lurl = pyxbmct . Label ( 'URL:' )
  self . placeControl ( self . lurl , 2 , 0 , 1 , 1 )
  self . url = pyxbmct . Edit ( '' )
  self . placeControl ( self . url , 2 , 1 , 1 , 4 )
  self . url . setText ( 'https://anonfiles.com/' )
  if 62 - 62: OOoO - ooo0Oo0 - I1Ii111 % i11ii11iIi11i / iII1iII1i1iiI
  self . bsalir = pyxbmct . Button ( 'Salir' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . bsalir , 3 , 2 )
  if 77 - 77: oOoO0oo0OOOo - oOoO0oo0OOOo . IiiI / OOo
  self . connect ( self . bsalir , self . close )
  if 14 - 14: iiI11iii111 % o0o00Oo0O
 def set_navigation ( self ) :
  if 41 - 41: i11ii11iIi11i + i1 + iiIIIII1i1iI - ooo0Oo0
  if 77 - 77: Iii1ii1II11i . ooo0Oo0 % OOooo0000ooo
  if 42 - 42: iII1iII1i1iiI - i11ii11iIi11i / Ii + iiIIIII1i1iI + I1iII1iiII
  if 17 - 17: iII1iII1i1iiI . Iii1ii1II11i . I1II1
  if 3 - 3: I1Ii111 . Iii1ii1II11i . IiiI / i1I1Ii1iI1ii
  if 38 - 38: oOoO0oo0OOOo % Ii . OOooo0000ooo - iiIIIII1i1iI + i1I1Ii1iI1ii
  if 66 - 66: ii * ii . iiIIIII1i1iI . i11ii11iIi11i - iiIIIII1i1iI
  self . brestaura . setNavigation ( self . bsalir , self . url , self . bbaja , self . bbaja )
  self . bbaja . setNavigation ( self . bsalir , self . url , self . brestaura , self . brestaura )
  self . url . setNavigation ( self . brestaura , self . bsalir , self . brestaura , self . bbaja )
  self . bsalir . setNavigation ( self . url , self . brestaura , self . brestaura , self . bbaja )
  if 77 - 77: iiI11iii111 - iI11I1II1I1I
  if 82 - 82: Ii . iiIIIII1i1iI / Iii1ii1II11i * o0o00Oo0O % iII1iII1i1iiI % iI11I1II1I1I
  self . setFocus ( self . brestaura )
  if 78 - 78: iI11I1II1I1I - i1I1Ii1iI1ii * I1iII1iiII + OOo + OOoO + OOoO
 def setAnimation ( self , control ) :
  if 11 - 11: OOoO - I1iII1iiII % OOooo0000ooo % OOoO / I1Ii111 - I1iII1iiII
  control . setAnimations ( [ ( 'WindowOpen' , 'effect=fade start=0 end=100 time=500' , ) ,
 ( 'WindowClose' , 'effect=fade start=100 end=0 time=500' , ) ] )
 def restaura ( self ) :
  o0OO00 ( )
  if 74 - 74: OOoO * o0o00Oo0O
 def baja ( self ) :
  oo ( self )
  if 89 - 89: iII1iII1i1iiI + Iii1ii1II11i
def o0OO00 ( ) :
 Ii1I = xbmcgui . Dialog ( )
 Oo0o0 = Ii1I . browseSingle ( 1 , 'KELEBEK' , '' , mask = '.zip' )
 if 49 - 49: iII1iII1i1iiI % i1I1Ii1iI1ii + i11ii11iIi11i . IiiI % I1II1
 try :
  if ( Oo0o0 != '' ) :
   I1i1iii = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , 'plugin.video.gdrive' ) )
   I1i1iii = I1i1iii . replace ( '/' , os . path . sep )
   i1iiI11I = zipfile . ZipFile ( Oo0o0 )
   i1iiI11I . extractall ( I1i1iii )
   i1iiI11I . close ( )
   if 29 - 29: ii
   iIiiiI1IiI1I1 ( 'RESTORE GDRIVE SETTINGS FINISHED' , 4000 )
   Ii1I . ok ( 'RESTORE GDRIVE SETTINGS' , '[COLOR yellow]Restauracion GDRIVE SETTINGS realizada.[/COLOR]' )
   if 23 - 23: OOo . oOoO0oo0OOOo
   if 98 - 98: iI11I1II1I1I % I1Ii111 * I1II1 * I1Ii111
 except Exception :
  i1IiIiiI , I1I , i1IiIiiI = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( I1I ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( I1I ) ) )
  if 80 - 80: I1Ii111 - I1iII1iiII
def oo ( ventana ) :
 OOO00 = ventana . url . getText ( )
 if ( OOO00 == '' ) :
  ventana . url . setText ( 'Por favor, introduzca URL' )
 else :
  try :
   Ii1I = xbmcgui . Dialog ( )
   I1i1iii = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , 'plugin.video.gdrive' ) )
   I1i1iii = I1i1iii . replace ( '/' , os . path . sep )
   xbmc . log ( 'URL BAJADA:' + OOO00 , 2 )
   iiiiiIIii = requests . get ( OOO00 . rstrip ( '/' ) )
   if 71 - 71: iiIIIII1i1iI + i1I1Ii1iI1ii * iiIIIII1i1iI - I1iII1iiII * OOo
   from bs4 import BeautifulSoup
   if 65 - 65: o0o00Oo0O % IiiI . I1II1 % iI11I1II1I1I / iiIIIII1i1iI % i1
   if 51 - 51: Ii . IiiI + oOoO0oo0OOOo
   II111ii1II1i = BeautifulSoup ( iiiiiIIii . content , "html.parser" )
   if 59 - 59: o0o00Oo0O + IiiI + ooo0Oo0 % IiiI
   if 70 - 70: OOoO * I1II1
   i1II1 = II111ii1II1i . find ( "a" , id = "download-url" )
   import urllib2
   if 66 - 66: ii + i1I1Ii1iI1ii + i1I1Ii1iI1ii - i11ii11iIi11i
   if 55 - 55: iiIIIII1i1iI + OOooo0000ooo . i11ii11iIi11i - I1II1 . o0o00Oo0O - OOooo0000ooo
   o0O = urllib2 . urlopen ( i1II1 [ 'href' ] )
   i1iiI11I = zipfile . ZipFile ( io . BytesIO ( o0O . read ( ) ) )
   if 72 - 72: OOoO / i11ii11iIi11i * Iii1ii1II11i - i1
   if 51 - 51: oOoO0oo0OOOo * I1iII1iiII % OOo * oOoO0oo0OOOo % I1II1 / OOooo0000ooo
   i1iiI11I . extractall ( I1i1iii )
   i1iiI11I . close ( )
   if 49 - 49: OOo
   iIiiiI1IiI1I1 ( 'RESTORE GDRIVE SETTINGS FINISHED' , 4000 )
   Ii1I . ok ( 'RESTORE GDRIVE SETTINGS' , '[COLOR yellow]Restauracion GDRIVE SETTINGS realizada.[/COLOR]' )
   xbmc . log ( '[SUCCESS] Bajado' , 2 )
   if 35 - 35: I1Ii111 - ii / I1II1 % i11ii11iIi11i
   if 78 - 78: iiI11iii111
   if 71 - 71: iiIIIII1i1iI + OOooo0000ooo % Ii + I1II1 - ooo0Oo0
   if 88 - 88: I1Ii111 - I1iII1iiII % iiIIIII1i1iI
   if 16 - 16: IiiI * iII1iII1i1iiI % ooo0Oo0
  except Exception :
   i1IiIiiI , I1I , i1IiIiiI = sys . exc_info ( )
   xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( I1I ) ) , 2 )
   Oo000o = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + o0OoOoOO00 , 'SettingsGD.zip' ) )
   xbmc . log ( 'Probando a bajar archivo a ' + Oo000o , 2 )
   import urllib
   urllib . urlretrieve ( i1II1 [ 'href' ] . rstrip ( '/' ) , Oo000o . replace ( '\r' , '' ) . replace ( '\n' , '' ) )
   i1iiI11I = zipfile . ZipFile ( Oo000o )
   if 7 - 7: OOooo0000ooo * I1iII1iiII % iII1iII1i1iiI . ooo0Oo0
   i1iiI11I . extractall ( I1i1iii )
   i1iiI11I . close ( )
   os . remove ( Oo000o )
   iIiiiI1IiI1I1 ( 'RESTORE GDRIVE SETTINGS FINISHED' , 4000 )
   Ii1I . ok ( 'RESTORE GDRIVE SETTINGS' , '[COLOR yellow]Restauracion GDRIVE SETTINGS realizada.[/COLOR]' )
   if 45 - 45: Ii * oOoO0oo0OOOo % iI11I1II1I1I + I1II1 - i1I1Ii1iI1ii
   if 17 - 17: ooo0Oo0
try :
 ooOooo000oOO = iIIii1IIi ( '' )
 ooOooo000oOO . doModal ( )
 if 59 - 59: oOoO0oo0OOOo + ii * I1Ii111 + i11ii11iIi11i
 if 58 - 58: oOoO0oo0OOOo * iiIIIII1i1iI * I1II1 / iiIIIII1i1iI
 del ooOooo000oOO
except Exception :
 i1IiIiiI , I1I , i1IiIiiI = sys . exc_info ( )
 xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( I1I ) ) , 2 )
 xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( I1I ) ) )
 if 75 - 75: iII1iII1i1iiI
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
