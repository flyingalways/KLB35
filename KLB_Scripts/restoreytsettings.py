import xbmc , xbmcaddon , xbmcgui , xbmcplugin , os
import shutil
import zipfile
oo000 = sys . version_info [ 0 ] >= 3
if ( oo000 ) :
 from io import StringIO
else :
 from StringIO import StringIO
import gzip
import requests
import io
import tempfile
import threading
#import extract
if 9 - 9: Ii . o0o00Oo0O - iI11I1II1I1I
import pyxbmct
if 71 - 71: ii
global iIIii1IIi , o0OO00 , oo , i1iII1IiiIiI1 , iIiiiI1IiI1I1 , o0OoOoOO00 , I11i , O0O
if 78 - 78: i11ii11iIi11i . oOoO0oo0OOOo + IiiI / Iii1ii1II11i
if 10 - 10: I1iII1iiII + I1Ii111 / OOo
o0OoOoOO00 = 'script.kelebek'
if 41 - 41: I1II1
if ( oo000 ) :
 import zipfile
else :
 if 100 - 100: iII1iII1i1iiI % iiIIIII1i1iI % iiI11iii111 % i1I1Ii1iI1ii
 from lib import zipfile
 if 11 - 11: OOoO / ooo0Oo0 * i1 - OOooo0000ooo
I11i = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + o0OoOoOO00 , 'icon.png' ) )
O0O = xbmc . translatePath ( os . path . join ( 'special://home/addons' , o0OoOoOO00 , 'resources' ) )
if 79 - 79: iII1iII1i1iiI + i1 . OOooo0000ooo * ooo0Oo0 % iiI11iii111 . IiiI
def i1iII1IiiIiI1 ( message , seconds ) :
 xbmc . executebuiltin ( 'XBMC.Notification(%s, %s, %s, %s)' % ( 'KELEBEK' , message , str ( seconds ) , I11i ) )
 if 94 - 94: OOoO * i1I1Ii1iI1ii / ooo0Oo0 . i11ii11iIi11i * OOoO
def iIiiiI1IiI1I1 ( message , seconds ) :
 iiiii11iII1 = threading . Thread ( target = i1iII1IiiIiI1 , args = ( message , seconds ) )
 iiiii11iII1 . start ( )
 if 54 - 54: OOooo0000ooo . OOooo0000ooo / iI11I1II1I1I / iiI11iii111 + iII1iII1i1iiI / OOo
class iIIii1IIi ( pyxbmct . AddonDialogWindow ) :
 def __init__ ( self , title = '' ) :
  super ( iIIii1IIi , self ) . __init__ ( title )
  self . setGeometry ( 750 , 250 , 4 , 5 )
  self . set_controls ( )
  self . set_navigation ( )
  if 39 - 39: iiI11iii111 / i1 . iiI11iii111 - iiI11iii111
  self . connect ( pyxbmct . ACTION_NAV_BACK , self . close )
  if 68 - 68: iiIIIII1i1iI . IiiI / OOoO
 def set_controls ( self ) :
  if 72 - 72: I1iII1iiII / I1iII1iiII
  self . fondo = pyxbmct . Image ( os . path . join ( O0O , 'fondoceleste.png' ) )
  self . placeControl ( self . fondo , 0 , 0 , 4 , 5 )
  if 30 - 30: I1iII1iiII
  if 95 - 95: iII1iII1i1iiI * OOo / oOoO0oo0OOOo . I1II1 + iiIIIII1i1iI
  iI11 = pyxbmct . Label ( 'Restore Youtube APIS' , alignment = pyxbmct . ALIGN_CENTER )
  self . placeControl ( iI11 , 0 , 0 , 1 , 5 )
  if 17 - 17: OOo
  if 64 - 64: i1I1Ii1iI1ii % i11ii11iIi11i % ii
  self . brestaura = pyxbmct . Button ( 'Restaurar Local' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . brestaura , 1 , 0 , 1 , 2 )
  if 3 - 3: OOoO + o0o00Oo0O
  self . connect ( self . brestaura , self . restaura )
  if 42 - 42: iiIIIII1i1iI / i11ii11iIi11i + Ii - i1I1Ii1iI1ii
  self . bbaja = pyxbmct . Button ( 'Restaurar de la Nube' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . bbaja , 1 , 3 , 1 , 2 )
  if 78 - 78: I1iII1iiII
  self . connect ( self . bbaja , self . baja )
  self . lurl = pyxbmct . Label ( 'URL:' )
  self . placeControl ( self . lurl , 2 , 0 , 1 , 1 )
  self . url = pyxbmct . Edit ( '' )
  self . placeControl ( self . url , 2 , 1 , 1 , 4 )
  self . url . setText ( 'https://anonfiles.com/' )
  if 18 - 18: o0o00Oo0O - OOoO / OOoO + OOooo0000ooo % OOooo0000ooo - ooo0Oo0
  if 62 - 62: OOoO - ooo0Oo0 - I1Ii111 % i11ii11iIi11i / iII1iII1i1iiI
  self . bsalir = pyxbmct . Button ( 'Salir' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( O0O , 'bgris.png' ) ,
 focusTexture = os . path . join ( O0O , 'bnaranja.png' ) )
  self . placeControl ( self . bsalir , 3 , 2 )
  if 77 - 77: oOoO0oo0OOOo - oOoO0oo0OOOo . IiiI / OOo
  self . connect ( self . bsalir , self . close )
  if 14 - 14: iiI11iii111 % o0o00Oo0O
 def set_navigation ( self ) :
  if 41 - 41: i11ii11iIi11i + i1 + iiIIIII1i1iI - ooo0Oo0
  if 77 - 77: Iii1ii1II11i . ooo0Oo0 % OOooo0000ooo
  if 42 - 42: iII1iII1i1iiI - i11ii11iIi11i / Ii + iiIIIII1i1iI + I1iII1iiII
  if 17 - 17: iII1iII1i1iiI . Iii1ii1II11i . I1II1
  if 3 - 3: I1Ii111 . Iii1ii1II11i . IiiI / i1I1Ii1iI1ii
  if 38 - 38: oOoO0oo0OOOo % Ii . OOooo0000ooo - iiIIIII1i1iI + i1I1Ii1iI1ii
  if 66 - 66: ii * ii . iiIIIII1i1iI . i11ii11iIi11i - iiIIIII1i1iI
  self . brestaura . setNavigation ( self . bsalir , self . url , self . bbaja , self . bbaja )
  self . bbaja . setNavigation ( self . bsalir , self . url , self . brestaura , self . brestaura )
  self . url . setNavigation ( self . brestaura , self . bsalir , self . brestaura , self . bbaja )
  self . bsalir . setNavigation ( self . url , self . brestaura , self . brestaura , self . bbaja )
  if 77 - 77: iiI11iii111 - iI11I1II1I1I
  if 82 - 82: Ii . iiIIIII1i1iI / Iii1ii1II11i * o0o00Oo0O % iII1iII1i1iiI % iI11I1II1I1I
  self . setFocus ( self . brestaura )
  if 78 - 78: iI11I1II1I1I - i1I1Ii1iI1ii * I1iII1iiII + OOo + OOoO + OOoO
 def setAnimation ( self , control ) :
  if 11 - 11: OOoO - I1iII1iiII % OOooo0000ooo % OOoO / I1Ii111 - I1iII1iiII
  control . setAnimations ( [ ( 'WindowOpen' , 'effect=fade start=0 end=100 time=500' , ) ,
 ( 'WindowClose' , 'effect=fade start=100 end=0 time=500' , ) ] )
 def restaura ( self ) :
  o0OO00 ( )
  if 74 - 74: OOoO * o0o00Oo0O
 def baja ( self ) :
  oo ( self )
if 89 - 89: iII1iII1i1iiI + Iii1ii1II11i
if 3 - 3: i11ii11iIi11i / IiiI % iiI11iii111 * Ii / o0o00Oo0O * iiI11iii111
if 49 - 49: iII1iII1i1iiI % i1I1Ii1iI1ii + i11ii11iIi11i . IiiI % I1II1
if 48 - 48: iiI11iii111 + iiI11iii111 / oOoO0oo0OOOo / iI11I1II1I1I
if 20 - 20: OOo
if 77 - 77: I1Ii111 / iiI11iii111
if 98 - 98: iI11I1II1I1I / i11ii11iIi11i / Ii / OOo
if 28 - 28: iiIIIII1i1iI - ooo0Oo0 . ooo0Oo0 + I1Ii111 - ii + o0o00Oo0O
if 95 - 95: I1iII1iiII % iII1iII1i1iiI . o0o00Oo0O
if 15 - 15: OOooo0000ooo / i1I1Ii1iI1ii . i1I1Ii1iI1ii - i11ii11iIi11i
if 53 - 53: ooo0Oo0 + IiiI * iII1iII1i1iiI
if 61 - 61: i11ii11iIi11i * iiIIIII1i1iI / ii . Ii . I1Ii111
if 60 - 60: iiI11iii111 / iiI11iii111
if 46 - 46: i1I1Ii1iI1ii * iiIIIII1i1iI - I1iII1iiII * iII1iII1i1iiI - i1
if 83 - 83: ii
if 31 - 31: oOoO0oo0OOOo - iiIIIII1i1iI . i1 % I1Ii111 - o0o00Oo0O
if 4 - 4: oOoO0oo0OOOo / OOooo0000ooo . OOoO
if 58 - 58: iiIIIII1i1iI * Ii / I1Ii111 % i1 - I1II1 / iII1iII1i1iiI
if 50 - 50: IiiI
if 34 - 34: IiiI * oOoO0oo0OOOo % OOoO * I1Ii111 - IiiI
if 33 - 33: OOo + iiIIIII1i1iI * I1iII1iiII - Iii1ii1II11i / iII1iII1i1iiI % i1I1Ii1iI1ii
if 21 - 21: I1iII1iiII * iI11I1II1I1I % iII1iII1i1iiI * i11ii11iIi11i
if 16 - 16: o0o00Oo0O - i1 * iI11I1II1I1I + OOoO
if 50 - 50: oOoO0oo0OOOo - OOooo0000ooo * I1II1 / i1 + OOo
if 88 - 88: i1I1Ii1iI1ii / i1 + OOoO - oOoO0oo0OOOo / OOooo0000ooo - I1Ii111
if 15 - 15: I1II1 + I1Ii111 - ii / iiIIIII1i1iI
if 58 - 58: Ii % iiI11iii111
if 71 - 71: iiIIIII1i1iI + OOooo0000ooo % Ii + I1II1 - ooo0Oo0
if 88 - 88: I1Ii111 - I1iII1iiII % iiIIIII1i1iI
if 16 - 16: IiiI * iII1iII1i1iiI % ooo0Oo0
if 86 - 86: IiiI + i1I1Ii1iI1ii % Ii * iII1iII1i1iiI . OOooo0000ooo * iiI11iii111
if 44 - 44: iII1iII1i1iiI
if 88 - 88: i1 % i1I1Ii1iI1ii . oOoO0oo0OOOo
if 38 - 38: OOo
if 57 - 57: o0o00Oo0O / iII1iII1i1iiI * i1 / I1Ii111 . oOoO0oo0OOOo
if 26 - 26: OOoO
if 91 - 91: I1iII1iiII . I1II1 + I1iII1iiII - OOoO / ii
if 39 - 39: I1II1 / OOooo0000ooo - oOoO0oo0OOOo
if 98 - 98: I1II1 / iiI11iii111 % iII1iII1i1iiI . I1Ii111
if 91 - 91: iII1iII1i1iiI % Iii1ii1II11i
if 64 - 64: iiI11iii111 % OOoO - i1 - iII1iII1i1iiI
if 31 - 31: iiI11iii111 - oOoO0oo0OOOo . iiI11iii111
if 18 - 18: OOo
if 98 - 98: OOoO * OOoO / OOoO + iiI11iii111
if 34 - 34: OOooo0000ooo
if 15 - 15: iiI11iii111 * OOooo0000ooo * Iii1ii1II11i % Ii % I1Ii111 - iiIIIII1i1iI
if 68 - 68: i1 % i11ii11iIi11i . ooo0Oo0 . I1II1
if 92 - 92: OOoO . i1
if 31 - 31: i1 . I1Ii111 / o0o00Oo0O
if 89 - 89: I1Ii111
if 68 - 68: I1iII1iiII * ii % o0o00Oo0O + I1iII1iiII + OOooo0000ooo
if 4 - 4: OOooo0000ooo + o0o00Oo0O * iiIIIII1i1iI
if 55 - 55: Iii1ii1II11i + iI11I1II1I1I / I1Ii111 * iII1iII1i1iiI - Ii - i1I1Ii1iI1ii
if 25 - 25: I1II1
if 7 - 7: i11ii11iIi11i / IiiI * i1 . ooo0Oo0 . iI11I1II1I1I
if 13 - 13: iiIIIII1i1iI / Ii
if 2 - 2: IiiI / o0o00Oo0O / OOo % I1Ii111 % i1I1Ii1iI1ii
if 52 - 52: OOo
if 95 - 95: i1I1Ii1iI1ii
if 87 - 87: OOooo0000ooo + I1Ii111 . iiIIIII1i1iI + I1Ii111
if 91 - 91: o0o00Oo0O
if 61 - 61: oOoO0oo0OOOo
if 64 - 64: OOooo0000ooo / I1Ii111 - o0o00Oo0O - iiI11iii111
if 86 - 86: iiI11iii111 % I1Ii111 / IiiI / I1Ii111
if 42 - 42: I1iII1iiII
if 67 - 67: i1 . OOoO . o0o00Oo0O
if 10 - 10: I1II1 % I1II1 - iI11I1II1I1I / iiIIIII1i1iI + i1I1Ii1iI1ii
if 87 - 87: iII1iII1i1iiI * I1II1 + iiIIIII1i1iI / iI11I1II1I1I / OOoO
if 37 - 37: OOoO - OOooo0000ooo * iII1iII1i1iiI % Ii - i1
if 83 - 83: iiI11iii111 / IiiI
if 34 - 34: ooo0Oo0
if 57 - 57: iII1iII1i1iiI . iiI11iii111 . i11ii11iIi11i
if 42 - 42: iiI11iii111 + I1II1 % o0o00Oo0O
if 6 - 6: iII1iII1i1iiI
if 68 - 68: I1Ii111 - I1iII1iiII
if 28 - 28: I1iII1iiII . iiIIIII1i1iI / iiIIIII1i1iI + Iii1ii1II11i . I1II1
if 1 - 1: iI11I1II1I1I / oOoO0oo0OOOo
if 33 - 33: iiI11iii111
if 18 - 18: OOo % OOoO * o0o00Oo0O
if 87 - 87: Ii
if 93 - 93: I1II1 - I1iII1iiII % Ii . OOoO / OOoO - i1
def o0OO00 ( ) :
 IIII = xbmcgui . Dialog ( )
 iiIiI = IIII . browseSingle ( 1 , 'KELEBEK' , '' , mask = '.zip' )
 if 91 - 91: OOoO % i11ii11iIi11i % iI11I1II1I1I
 try :
  if ( iiIiI != '' ) :
   try :
    IIi1I11I1II = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , 'plugin.video.youtube' ) )
    IIi1I11I1II = IIi1I11I1II . replace ( '/' , os . path . sep )
    OooOoooOo = zipfile . ZipFile ( iiIiI )
    OooOoooOo . extractall ( IIi1I11I1II )
    OooOoooOo . close ( )
    if 46 - 46: OOoO
    iIiiiI1IiI1I1 ( 'RESTORE SETTINGS YOUTUBE FINISHED' , 4000 )
    IIII . ok ( 'RESTORE SETTINGS YOUTUBE' , '[COLOR yellow]Restauracion Settings Youtube realizada.[/COLOR]' )
    if 8 - 8: iII1iII1i1iiI * I1Ii111 - i1I1Ii1iI1ii - I1iII1iiII * iiIIIII1i1iI % IiiI
    if 48 - 48: o0o00Oo0O
   except Exception :
    xbmc . log ( 'Probando opcion 2 ZIP' , 2 )
    import zipfile , struct , io
    with open ( iiIiI , 'rb' ) as I1IiiI :
     IIi = I1IiiI . read ( )
    i1Iii1i1I = IIi . rindex ( b'PK\5\6' ) + 22
    i1Iii1i1I += struct . unpack ( '<H' , IIi [ i1Iii1i1I - 2 : i1Iii1i1I ] ) [ 0 ]
    if IIi [ i1Iii1i1I : ] . strip ( b'\0' ) == b'' :
     IIi = IIi [ : i1Iii1i1I ]
    OooOoooOo = zipfile . ZipFile ( io . BytesIO ( IIi ) )
    OooOoooOo . extractall ( IIi1I11I1II )
    OooOoooOo . close ( )
    iIiiiI1IiI1I1 ( 'RESTORE SETTINGS YOUTUBE FINISHED' , 4000 )
    IIII . ok ( 'RESTORE SETTINGS YOUTUBE' , '[COLOR yellow]Restauracion Settings Youtube realizada.[/COLOR]' )
 except Exception :
  OOoO00 , IiI111111IIII , OOoO00 = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( IiI111111IIII ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( IiI111111IIII ) ) )
  if 37 - 37: i1 / I1Ii111
  if 23 - 23: o0o00Oo0O
def oo ( ventana ) :
 o00oO0oOo00 = ventana . url . getText ( )
 if ( o00oO0oOo00 == '' ) :
  ventana . url . setText ( 'Por favor, introduzca URL' )
 else :
  try :
   IIII = xbmcgui . Dialog ( )
   IIi1I11I1II = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , 'plugin.video.youtube' ) )
   IIi1I11I1II = IIi1I11I1II . replace ( '/' , os . path . sep )
   xbmc . log ( 'URL BAJADA:' + o00oO0oOo00 , 2 )
   oO0oOo0 = requests . get ( o00oO0oOo00 . rstrip ( '/' ) )
   if 45 - 45: OOoO / OOoO + i1 + OOooo0000ooo
   from bs4 import BeautifulSoup
   if 47 - 47: OOo + OOooo0000ooo
   if 82 - 82: oOoO0oo0OOOo . ooo0Oo0 - iI11I1II1I1I - ooo0Oo0 * oOoO0oo0OOOo
   ooO0oOOooOo0 = BeautifulSoup ( oO0oOo0 . content , "html.parser" )
   if 38 - 38: i1
   if 84 - 84: iI11I1II1I1I % OOoO / iI11I1II1I1I % iiI11iii111
   iiOOooooO0Oo = ooO0oOOooOo0 . find ( "a" , id = "download-url" )
   import urllib2
   if 91 - 91: OOo . iI11I1II1I1I / iII1iII1i1iiI + i11ii11iIi11i
   if 42 - 42: OOooo0000ooo . OOo . OOooo0000ooo - I1II1
   i1ii1I1I1 = urllib2 . urlopen ( iiOOooooO0Oo [ 'href' ] )
   OooOoooOo = zipfile . ZipFile ( io . BytesIO ( i1ii1I1I1 . read ( ) ) )
   if 74 - 74: OOo . OOoO
   if 18 - 18: iiIIIII1i1iI + OOoO - i1I1Ii1iI1ii . oOoO0oo0OOOo + Ii
   OooOoooOo . extractall ( IIi1I11I1II )
   OooOoooOo . close ( )
   if 20 - 20: i1
   iIiiiI1IiI1I1 ( 'RESTORE SETTINGS YOUTUBE FINISHED' , 4000 )
   IIII . ok ( 'RESTORE SETTINGS YOUTUBE' , '[COLOR yellow]Restauracion Settings Youtube realizada.[/COLOR]' )
   xbmc . log ( '[SUCCESS] Bajado' , 2 )
   if 52 - 52: oOoO0oo0OOOo - ii % i1I1Ii1iI1ii + IiiI * Iii1ii1II11i . ooo0Oo0
   if 75 - 75: OOooo0000ooo + I1Ii111 + OOo * iiI11iii111 % iII1iII1i1iiI . OOoO
   if 55 - 55: iiIIIII1i1iI . IiiI
   if 61 - 61: Iii1ii1II11i % ooo0Oo0 . Iii1ii1II11i
   if 100 - 100: i1 * o0o00Oo0O
  except Exception :
   OOoO00 , IiI111111IIII , OOoO00 = sys . exc_info ( )
   xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( IiI111111IIII ) ) , 2 )
   o00oO0oo0OO = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + o0OoOoOO00 , 'SettingsYT.zip' ) )
   xbmc . log ( 'Probando a bajar archivo a ' + o00oO0oo0OO , 2 )
   import urllib
   urllib . urlretrieve ( iiOOooooO0Oo [ 'href' ] . rstrip ( '/' ) , o00oO0oo0OO . replace ( '\r' , '' ) . replace ( '\n' , '' ) )
   OooOoooOo = zipfile . ZipFile ( o00oO0oo0OO )
   if 57 - 57: i1 % i1I1Ii1iI1ii + OOo - Iii1ii1II11i
   OooOoooOo . extractall ( IIi1I11I1II )
   OooOoooOo . close ( )
   os . remove ( o00oO0oo0OO )
   iIiiiI1IiI1I1 ( 'RESTORE SETTINGS YOUTUBE FINISHED' , 4000 )
   IIII . ok ( 'RESTORE SETTINGS YOUTUBE' , '[COLOR yellow]Restauracion Settings Youtube realizada.[/COLOR]' )
   if 65 - 65: iiI11iii111 . I1Ii111
   if 39 - 39: oOoO0oo0OOOo / OOooo0000ooo + i1 / I1Ii111
try :
 I1Ii11i = iIIii1IIi ( '' )
 I1Ii11i . doModal ( )
 if 35 - 35: OOo
 if 90 - 90: i1 % i1I1Ii1iI1ii - iI11I1II1I1I - iI11I1II1I1I / Ii % I1II1
 del I1Ii11i
except Exception :
 OOoO00 , IiI111111IIII , OOoO00 = sys . exc_info ( )
 xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( IiI111111IIII ) ) , 2 )
 xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( IiI111111IIII ) ) ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
