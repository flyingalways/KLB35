import xbmc , xbmcaddon , xbmcgui , xbmcplugin , os
import shutil
import zipfile
oo000 = sys . version_info [ 0 ] >= 3
if ( oo000 ) :
 from io import StringIO
else :
 from StringIO import StringIO
import gzip
import requests
import io
import tempfile
import threading
if 9 - 9: Ii . o0o00Oo0O - iI11I1II1I1I
import pyxbmct
import sys
import json
if 71 - 71: ii
global iIIii1IIi , o0OO00 , oo , i1iII1IiiIiI1 , iIiiiI1IiI1I1 , o0OoOoOO00 , I11i , O0O , Oo , I1ii11iIi11i
global I1IiI , o0OOO
global zipf
if 13 - 13: ooOo + Ooo0O
if 48 - 48: iII111i % IiII + I1Ii111 / ooOoO0o * o00O0oo
O0oOO0o0 = 'script.kelebek'
if 9 - 9: o0o - OOO0o0o
if oo000 :
 import zipfile
else :
#xbmc.log('[%s] %s' % ('PYTHON 2', ''), 2)
 from lib import zipfile
 if 40 - 40: II / oo00 * i1I1Ii1iI1ii * o0oOoO00o . i1
I1IiI = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + O0oOO0o0 , 'icon.png' ) )
o0OOO = xbmc . translatePath ( os . path . join ( 'special://home/addons' , O0oOO0o0 , 'resources' ) )
if 64 - 64: ooO0Oooo00 % Ooo0
oo00000o0 = xbmcgui . DialogProgress ( )
I11i1i11i1I = 0
Iiii = 0
if 87 - 87: OOO0o0o / Ooo0 + ooO0Oooo00 - Ooo0 . Ooo0 / Ooo0O
class iIIii1IIi ( pyxbmct . AddonDialogWindow ) :
 if 11 - 11: iII111i % o00O0oo - IiII
 def __init__ ( self , title = '' ) :
  super ( iIIii1IIi , self ) . __init__ ( title )
  self . setGeometry ( 750 , 300 , 4 , 3 )
  self . set_controls ( )
  self . set_navigation ( )
  if 58 - 58: Ii % ooO0Oooo00
  self . connect ( pyxbmct . ACTION_NAV_BACK , self . close )
  if 54 - 54: II % o0o00Oo0O + iII111i - o0oOoO00o / oo00
 def set_controls ( self ) :
  if 31 - 31: I1Ii111 + Ooo0O
  self . fondo = pyxbmct . Image ( os . path . join ( o0OOO , 'fondoceleste.png' ) )
  self . placeControl ( self . fondo , 0 , 0 , 4 , 3 )
  if 13 - 13: II * OOO0o0o * iII111i
  if 55 - 55: Ooo0O
  IIIiI11ii = pyxbmct . Label ( 'BACKUP KODI' , alignment = pyxbmct . ALIGN_CENTER ,
 textColor = '0xFFFBFCFA' )
  self . placeControl ( IIIiI11ii , 0 , 0 , 1 , 3 )
  if 52 - 52: o0oOoO00o + II % ii / Ii
  if 25 - 25: o0o00Oo0O * OOO0o0o + ii
  self . bguarda = pyxbmct . Button ( 'Guardar Archivo' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( o0OOO , 'bgris.png' ) ,
 focusTexture = os . path . join ( o0OOO , 'bnaranja.png' ) )
  self . placeControl ( self . bguarda , 1 , 0 , 1 , 1 )
  if 70 - 70: II / i1I1Ii1iI1ii . i1I1Ii1iI1ii
  self . connect ( self . bguarda , self . guarda )
  if 11 - 11: Ooo0 / o0o00Oo0O - ooOo
  self . bsube = pyxbmct . Button ( 'Subir Archivo' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( o0OOO , 'bgris.png' ) ,
 focusTexture = os . path . join ( o0OOO , 'bnaranja.png' ) )
  self . placeControl ( self . bsube , 1 , 2 , 1 , 1 )
  if 85 - 85: II % o0o * Ooo0
  self . connect ( self . bsube , self . sube )
  if 90 - 90: o00O0oo % o00O0oo % oo00 * ooOoO0o
  self . url = pyxbmct . Label ( '' , textColor = '0xFFFF0000' )
  self . placeControl ( self . url , 2 , 0 , 1 , 3 )
  self . url . setVisible ( False )
  if 26 - 26: i1I1Ii1iI1ii - o00O0oo
  self . bsalir = pyxbmct . Button ( 'Salir' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( o0OOO , 'bgris.png' ) ,
 focusTexture = os . path . join ( o0OOO , 'bnaranja.png' ) )
  self . placeControl ( self . bsalir , 3 , 1 , 1 , 1 )
  if 63 - 63: Ooo0O . Ooo0O
  self . connect ( self . bsalir , self . close )
  if 32 - 32: ooOo . oo00 % I1Ii111 . o00O0oo
 def set_navigation ( self ) :
  if 42 - 42: ooO0Oooo00 + o0o
  if 70 - 70: IiII % IiII . i1 % I1Ii111 * o00O0oo % OOO0o0o
  if 23 - 23: Ii + iII111i
  if 68 - 68: ooOoO0o . OOO0o0o . Ii
  if 40 - 40: OOO0o0o . ooOoO0o . IiII . ooOo
  if 33 - 33: i1I1Ii1iI1ii + Ooo0O % Ii . Ooo0 - iII111i
  if 66 - 66: i1I1Ii1iI1ii - ii * ii . II . o0o
  self . bguarda . setNavigation ( self . bsalir , self . bsalir , self . bsube , self . bsube )
  self . bsube . setNavigation ( self . bsalir , self . bsalir , self . bguarda , self . bguarda )
  self . bsalir . setNavigation ( self . bguarda , self . bguarda , self . bguarda , self . bguarda )
  if 22 - 22: ii % oo00 - o0oOoO00o . iI11I1II1I1I * Ii
  if 32 - 32: IiII * o0o00Oo0O % OOO0o0o % i1I1Ii1iI1ii . i1
  self . setFocus ( self . bguarda )
  if 61 - 61: Ooo0
 def setAnimation ( self , control ) :
  if 79 - 79: IiII + iII111i - o0oOoO00o
  control . setAnimations ( [ ( 'WindowOpen' , 'effect=fade start=0 end=100 time=500' , ) ,
 ( 'WindowClose' , 'effect=fade start=100 end=0 time=500' , ) ] )
 def guarda ( self ) :
  i1iII1IiiIiI1 ( 0 )
  if 83 - 83: Ooo0
 def sube ( self ) :
  I1ii11iIi11i ( self )
  if 64 - 64: I1Ii111 % Ooo0 % o0oOoO00o / ooOoO0o - I1Ii111
  if 74 - 74: o0oOoO00o * o0o00Oo0O
def iIiiiI1IiI1I1 ( message , seconds ) :
 xbmc . executebuiltin ( 'XBMC.Notification(%s, %s, %s, %s)' % ( 'KELEBEK' , message , str ( seconds ) , I1IiI ) )
 if 89 - 89: OOO0o0o + IiII
def o0OoOoOO00 ( message , seconds ) :
 Ii1I = threading . Thread ( target = iIiiiI1IiI1I1 , args = ( message , seconds ) )
 Ii1I . start ( )
 if 89 - 89: Ii / o0o00Oo0O * ooOoO0o % II % OOO0o0o
def o0OO00 ( path , exento = '' ) :
 global oo00000o0
 global Iiii
 global I11i1i11i1I
 global zipf
 try :
  if 50 - 50: ooOo . iII111i % ooOoO0o - I1Ii111 - oo00
  for Iiiii , OoO0 , Ooooo in os . walk ( path ) :
   if 2 - 2: Ooo0 / II - i1 . ooOoO0o
   for file in Ooooo :
    if ( oo00000o0 . iscanceled ( ) ) :
     return
    Iiii = Iiii + 1
    Oo = Iiii / float ( I11i1i11i1I ) * 100
    if 88 - 88: I1Ii111 + o0o00Oo0O / ooOoO0o * o0oOoO00o
    if 41 - 41: OOO0o0o
    oo00000o0 . update ( int ( Oo ) , 'Copiando [COLOR yellow]%s[/COLOR]' % file + ' Por favor, espere...' )
    if ( os . path . exists ( os . path . join ( Iiiii , file ) ) ) :
     if ( exento not in file ) :
      try :
       if 6 - 6: o0o
       zipf . write ( os . path . join ( Iiiii , file ) )
      except Exception :
       I1I , oOO00oOO , I1I = sys . exc_info ( )
       xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( oOO00oOO ) ) , 2 )
    else :
     xbmc . log ( '[%s] %s %s %s' % ( 'FILE NOT EXISTS:' , Iiiii , OoO0 , file ) , 2 )
 except Exception :
  I1I , oOO00oOO , I1I = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( oOO00oOO ) ) , 2 )
  if 75 - 75: ooOo / ii - o0o00Oo0O / ooOoO0o . Ooo0O - ooOo
  if 71 - 71: II + i1I1Ii1iI1ii * II - I1Ii111 * o00O0oo
  if 65 - 65: o0o00Oo0O % iII111i . o0o % iI11I1II1I1I / II % ooO0Oooo00
  if 51 - 51: Ii . iII111i + Ooo0O
def i1iII1IiiIiI1 ( flag ) :
 global oo00000o0
 global Iiii
 global I11i1i11i1I
 global O0oOO0o0
 global zipf
 II111ii1II1i = xbmcgui . Dialog ( )
 if ( flag == 0 ) :
  OoOo00o = II111ii1II1i . browse ( 3 , 'KELEBEK' , '' )
 else :
  OoOo00o = xbmc . translatePath ( 'special://home/addons/' + O0oOO0o0 )
  o0OOoo0OO0OOO = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + O0oOO0o0 , 'Backup_KLB.zip' ) )
  if 19 - 19: OOO0o0o % ooOo % o00O0oo
 try :
  if ( OoOo00o != '' ) :
   if 93 - 93: iI11I1II1I1I % OOO0o0o * ooOo
   if 16 - 16: o0o00Oo0O - ooO0Oooo00 * iI11I1II1I1I + o0oOoO00o
   if ( os . path . exists ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) ) ) :
    os . remove ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) )
   zipf = zipfile . ZipFile ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) , 'w' , zipfile . ZIP_DEFLATED )
   os . chdir ( xbmc . translatePath ( 'special://home' ) )
   oo00000o0 . create ( "BACKUP KELEBEK" , 'Contando Numero de Archivos. Por favor, espere...' )
   oo00000o0 . update ( 0 )
   I11i1i11i1I = 0
   Iiii = 0
   for Ii11iII1 , OoO0 , Ooooo in os . walk ( './addons/' ) :
    for file in Ooooo :
     I11i1i11i1I = I11i1i11i1I + 1
     oo00000o0 . update ( 0 , 'Numero de Archivos: ' + str ( I11i1i11i1I ) )
   for Ii11iII1 , OoO0 , Ooooo in os . walk ( './userdata/' ) :
    for file in Ooooo :
     I11i1i11i1I = I11i1i11i1I + 1
     oo00000o0 . update ( 0 , 'Numero de Archivos: ' + str ( I11i1i11i1I ) )
   o0OO00 ( './addons/' , 'Backup_KLB' )
   if ( not oo00000o0 . iscanceled ( ) ) :
    o0OO00 ( './userdata/' , 'Backup_KLB' )
   zipf . close ( )
   oo00000o0 . close ( )
   if ( not oo00000o0 . iscanceled ( ) ) :
    if ( flag == 0 ) :
     o0OoOoOO00 ( 'BACKUP FINISHED' , 4000 )
     II111ii1II1i . ok ( 'BACKUP FINISHED' , '[COLOR yellow]Copia realizada:[/COLOR] [COLOR blue]' + str ( I11i1i11i1I ) + '[/COLOR] [COLOR yellow]Archivos copiados.[/COLOR]' )
    return True
   else :
    if ( os . path . isfile ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) ) ) :
     os . remove ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) )
    II111ii1II1i . ok ( 'BACKUP CANCELADO' , '[COLOR yellow]Backup cancelado[/COLOR]' )
    return False
 except Exception :
  I1I , oOO00oOO , I1I = sys . exc_info ( )
  zipf . close ( )
  oo00000o0 . close ( )
  if ( os . path . isfile ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) ) ) :
   os . remove ( os . path . join ( OoOo00o , 'Backup_KLB.zip' ) )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( oOO00oOO ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( oOO00oOO ) ) )
  return False
if 51 - 51: Ooo0O * I1Ii111 % o00O0oo * Ooo0O % o0o / Ooo0
if 49 - 49: o00O0oo
if 35 - 35: ooOoO0o - ii / o0o % ooOo
if 78 - 78: oo00
if 71 - 71: II + Ooo0 % Ii + o0o - i1
if 88 - 88: ooOoO0o - I1Ii111 % II
if 16 - 16: iII111i * OOO0o0o % i1
if 86 - 86: iII111i + i1I1Ii1iI1ii % Ii * OOO0o0o . Ooo0 * oo00
if 44 - 44: OOO0o0o
if 88 - 88: ooO0Oooo00 % i1I1Ii1iI1ii . Ooo0O
if 38 - 38: o00O0oo
if 57 - 57: o0o00Oo0O / OOO0o0o * ooO0Oooo00 / ooOoO0o . Ooo0O
if 26 - 26: o0oOoO00o
if 91 - 91: I1Ii111 . o0o + I1Ii111 - o0oOoO00o / ii
if 39 - 39: o0o / Ooo0 - Ooo0O
if 98 - 98: o0o / oo00 % OOO0o0o . ooOoO0o
if 91 - 91: OOO0o0o % IiII
if 64 - 64: oo00 % o0oOoO00o - ooO0Oooo00 - OOO0o0o
if 31 - 31: oo00 - Ooo0O . oo00
if 18 - 18: o00O0oo
if 98 - 98: o0oOoO00o * o0oOoO00o / o0oOoO00o + oo00
if 34 - 34: Ooo0
if 15 - 15: oo00 * Ooo0 * IiII % Ii % ooOoO0o - II
if 68 - 68: ooO0Oooo00 % ooOo . i1 . o0o
if 92 - 92: o0oOoO00o . ooO0Oooo00
if 31 - 31: ooO0Oooo00 . ooOoO0o / o0o00Oo0O
if 89 - 89: ooOoO0o
if 68 - 68: I1Ii111 * ii % o0o00Oo0O + I1Ii111 + Ooo0
if 4 - 4: Ooo0 + o0o00Oo0O * II
if 55 - 55: IiII + iI11I1II1I1I / ooOoO0o * OOO0o0o - Ii - i1I1Ii1iI1ii
if 25 - 25: o0o
if 7 - 7: ooOo / iII111i * ooO0Oooo00 . i1 . iI11I1II1I1I
if 13 - 13: II / Ii
if 2 - 2: iII111i / o0o00Oo0O / o00O0oo % ooOoO0o % i1I1Ii1iI1ii
if 52 - 52: o00O0oo
if 95 - 95: i1I1Ii1iI1ii
if 87 - 87: Ooo0 + ooOoO0o . II + ooOoO0o
if 91 - 91: o0o00Oo0O
if 61 - 61: Ooo0O
if 64 - 64: Ooo0 / ooOoO0o - o0o00Oo0O - oo00
if 86 - 86: oo00 % ooOoO0o / iII111i / ooOoO0o
if 42 - 42: I1Ii111
if 67 - 67: ooO0Oooo00 . o0oOoO00o . o0o00Oo0O
if 10 - 10: o0o % o0o - iI11I1II1I1I / II + i1I1Ii1iI1ii
if 87 - 87: OOO0o0o * o0o + II / iI11I1II1I1I / o0oOoO00o
if 37 - 37: o0oOoO00o - Ooo0 * OOO0o0o % Ii - ooO0Oooo00
if 83 - 83: oo00 / iII111i
if 34 - 34: i1
if 57 - 57: OOO0o0o . oo00 . ooOo
if 42 - 42: oo00 + o0o % o0o00Oo0O
if 6 - 6: OOO0o0o
if 68 - 68: ooOoO0o - I1Ii111
if 28 - 28: I1Ii111 . II / II + IiII . o0o
if 1 - 1: iI11I1II1I1I / Ooo0O
if 33 - 33: oo00
if 18 - 18: o00O0oo % o0oOoO00o * o0o00Oo0O
if 87 - 87: Ii
if 93 - 93: o0o - I1Ii111 % Ii . o0oOoO00o / o0oOoO00o - ooO0Oooo00
if 9 - 9: o0o / IiII - iII111i / ii / iI11I1II1I1I - o00O0oo
if 91 - 91: o0oOoO00o % ooOo % iI11I1II1I1I
if 20 - 20: II % i1I1Ii1iI1ii / i1I1Ii1iI1ii + i1I1Ii1iI1ii
if 45 - 45: OOO0o0o - i1 - ii - I1Ii111 . Ooo0O / o0o00Oo0O
if 51 - 51: o0o00Oo0O + o0oOoO00o
if 8 - 8: OOO0o0o * ooOoO0o - i1I1Ii1iI1ii - I1Ii111 * II % iII111i
if 48 - 48: o0o00Oo0O
if 11 - 11: oo00 + ii - I1Ii111 / o00O0oo + IiII . Ooo0O
if 41 - 41: i1I1Ii1iI1ii - o0o00Oo0O - o0o00Oo0O
if 68 - 68: II % ooO0Oooo00
if 88 - 88: iI11I1II1I1I - Ooo0 + II
if 40 - 40: iII111i * i1I1Ii1iI1ii + II % o0oOoO00o
if 74 - 74: OOO0o0o - IiII + ii + ooO0Oooo00 / ooOoO0o
if 23 - 23: o0o00Oo0O
if 85 - 85: i1I1Ii1iI1ii
if 84 - 84: iII111i . iI11I1II1I1I % ii + i1I1Ii1iI1ii % ii % I1Ii111
if 42 - 42: I1Ii111 / oo00 / o00O0oo + o0oOoO00o / ooOoO0o
if 84 - 84: Ooo0 * Ooo0O + IiII
class I11i ( Exception ) :
 def __init__ ( self , msg ) :
  self . msg = msg
  Exception . __init__ ( self , msg )
  if 53 - 53: o0oOoO00o % Ooo0O . i1 - iI11I1II1I1I - i1 * Ooo0O
 def __str__ ( self ) :
  return self . msg
  if 77 - 77: iI11I1II1I1I * I1Ii111
 __repr__ = __str__
 if 95 - 95: iII111i + Ii
class O0O ( io . BytesIO ) :
 global oo00000o0
 def __init__ ( self , buf = b'' ,
 callback = None ,
 cb_args = ( ) ,
 cb_kwargs = { } ) :
  self . _callback = callback
  self . _cb_args = cb_args
  self . _cb_kwargs = cb_kwargs
  self . _progress = 0
  self . _len = len ( buf )
  io . BytesIO . __init__ ( self , buf )
  if 6 - 6: Ooo0 / Ii + o0oOoO00o * OOO0o0o
 def __len__ ( self ) :
  return self . _len
  if 80 - 80: Ooo0O
 def read ( self , n = - 1 ) :
  if ( oo00000o0 . iscanceled ( ) ) :
   raise I11i ( 'The upload was cancelled.' )
  O0Oi1I1I = io . BytesIO . read ( self , n )
  self . _progress += int ( len ( O0Oi1I1I ) )
  self . _cb_kwargs . update ( {
 'size' : self . _len ,
 'progress' : self . _progress
 } )
  if self . _callback :
   try :
    self . _callback ( * self . _cb_args , ** self . _cb_kwargs )
   except :
    raise I11i ( 'The upload was cancelled.' )
  return O0Oi1I1I
  if 12 - 12: Ii / I1Ii111
  if 80 - 80: ooO0Oooo00 . Ii - o00O0oo
def Oo ( size = None , progress = None ) :
 global oo00000o0
 if 25 - 25: I1Ii111
 if ( oo00000o0 . iscanceled ( ) ) :
  raise I11i ( 'The upload was cancelled.' )
 progress = progress / float ( size ) * 100
 oo00000o0 . update ( int ( progress ) , 'Subiendo Backup ' + '\n' + '[COLOR red]Backup_KLB.zip[/COLOR]' + '\n' + 'Por favor, espera...' )
 if 62 - 62: II + o0o00Oo0O
 if 98 - 98: o00O0oo
 if 51 - 51: IiII - OOO0o0o + Ooo0O * i1I1Ii1iI1ii . oo00 + OOO0o0o
def I1ii11iIi11i ( ventana ) :
 global O0oOO0o0
 try :
  global oo00000o0
  o0OOoo0OO0OOO = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + O0oOO0o0 , 'Backup_KLB.zip' ) )
  if ( i1iII1IiiIiI1 ( 1 ) ) :
   ventana . url . setLabel ( 'SUBIENDO ARCHIVO. POR FAVOR, ESPERE...' )
   ventana . url . setVisible ( True )
   oo00000o0 . create ( "BACKUP KELEBEK" , 'Subiendo Backup. Por favor, espere...' )
   oo00000o0 . update ( 0 )
   OoO0o = 'https://api.anonfiles.com/upload'
   oO0o0Ooooo = open ( o0OOoo0OO0OOO , 'rb' )
   Ooooo = { 'file' : ( oO0o0Ooooo ) }
   if 94 - 94: o00O0oo * i1I1Ii1iI1ii / IiII / i1I1Ii1iI1ii
   if 87 - 87: IiII . i1
   if 75 - 75: Ooo0 + ooOoO0o + o00O0oo * oo00 % OOO0o0o . o0oOoO00o
   if 55 - 55: II . iII111i
   Ooooo = { "file" : ( "Backup_KLB.zip" , oO0o0Ooooo . read ( ) ) }
   ( oOo0O0o00o , o00oO0oo0OO ) = requests . packages . urllib3 . filepost . encode_multipart_formdata ( Ooooo )
   O0O0OOOOoo = { "Content-Type" : o00oO0oo0OO }
   oOooO0 = O0O ( oOo0O0o00o , Oo )
   Ii1I1Ii = requests . post ( OoO0o , data = oOooO0 , headers = O0O0OOOOoo )
   if 69 - 69: iII111i / o00O0oo . i1 * ooO0Oooo00 % i1I1Ii1iI1ii - o00O0oo
   if 13 - 13: i1I1Ii1iI1ii . Ii
   if 56 - 56: o0o % o0o00Oo0O - iII111i
   if 100 - 100: i1I1Ii1iI1ii - o0o00Oo0O % OOO0o0o * II + iII111i
   if 88 - 88: ii - I1Ii111 * o0o00Oo0O * ii . ii
   if 33 - 33: ooO0Oooo00 + o0oOoO00o * OOO0o0o / iI11I1II1I1I - iII111i
   if 54 - 54: ooO0Oooo00 / II . OOO0o0o % o0oOoO00o
   if 57 - 57: Ii . o0o - i1I1Ii1iI1ii - OOO0o0o + ooOoO0o
   if 63 - 63: ooOoO0o * o0oOoO00o
   if ( not oo00000o0 . iscanceled ( ) ) :
    if 69 - 69: o0o00Oo0O . I1Ii111
    if 49 - 49: iII111i - oo00
    if 74 - 74: iI11I1II1I1I * o0o + ooOoO0o / ooOo / Ooo0O . IiII
    if 62 - 62: ii * iII111i
    if 58 - 58: ooOoO0o % o00O0oo
    if 50 - 50: ooO0Oooo00 . o00O0oo
    if 97 - 97: o0o00Oo0O + ooOoO0o
    if 89 - 89: o00O0oo + I1Ii111 * oo00 * i1I1Ii1iI1ii
    if 37 - 37: ii - o0o00Oo0O - o00O0oo
    if 77 - 77: II * iI11I1II1I1I
    if 98 - 98: iII111i % i1I1Ii1iI1ii * ii
    if 51 - 51: iI11I1II1I1I . ooOoO0o / OOO0o0o + o00O0oo
    if 33 - 33: Ooo0 . Ooo0O % o0oOoO00o + o00O0oo
    if 71 - 71: IiII % II
    if 98 - 98: oo00 % Ii % Ooo0 + i1I1Ii1iI1ii
    if 78 - 78: o0o % OOO0o0o / o0oOoO00o - iI11I1II1I1I
    if 69 - 69: ooO0Oooo00
    if 11 - 11: iII111i
    if 16 - 16: i1I1Ii1iI1ii + i1 * o0o00Oo0O % ooOo . iII111i
    if 67 - 67: ii / iII111i * i1I1Ii1iI1ii + oo00
    if 65 - 65: ii - o0o / Ooo0 / Ooo0O / ooOo
    if 71 - 71: ooO0Oooo00 + i1I1Ii1iI1ii
    if 28 - 28: II
    if 38 - 38: Ooo0 % Ooo0O % oo00 / I1Ii111 + ooOoO0o / ooOo
    if 54 - 54: iI11I1II1I1I % o0o - II / OOO0o0o - I1Ii111 . oo00
    if 11 - 11: o0o . I1Ii111 * i1 * ii + Ooo0
    if 33 - 33: o0o00Oo0O * o00O0oo - ooO0Oooo00 % ooO0Oooo00
    if 18 - 18: ooO0Oooo00 / IiII * ooO0Oooo00 + ooO0Oooo00 * Ii * o0o
    if 11 - 11: Ooo0 / ooOoO0o - i1 * ii + ii . ooOoO0o
    if 26 - 26: i1I1Ii1iI1ii % o0o
    o00Oo0oooooo = json . loads ( Ii1I1Ii . text )
    if o00Oo0oooooo [ 'status' ] :
     oo00000o0 . close ( )
     O0oO0 = o00Oo0oooooo [ 'data' ] [ 'file' ] [ 'url' ] [ 'short' ]
     iII11 = o00Oo0oooooo [ 'data' ] [ 'file' ] [ 'url' ] [ 'full' ]
     if 32 - 32: ooO0Oooo00
     ventana . url . setLabel ( 'SUBIDO A ' + O0oO0 )
     ventana . url . setVisible ( True )
    else :
     Iii1 = o00Oo0oooooo [ 'error' ] [ 'message' ]
     oOOOoo00 = o00Oo0oooooo [ 'error' ] [ 'type' ]
     xbmc . log ( '[ERROR] ' + Iii1 + ' ' + oOOOoo00 , 2 )
     oo00000o0 . close ( )
     ventana . url . setLabel ( 'ERROR: ' + Iii1 + ' ' + oOOOoo00 )
     ventana . url . setVisible ( True )
   else :
    ventana . url . setLabel ( 'SUBIDA CANCELADA' )
    ventana . url . setVisible ( True )
   oO0o0Ooooo . close ( )
   os . remove ( o0OOoo0OO0OOO )
  else :
   if 9 - 9: o0o00Oo0O % o0o00Oo0O - o00O0oo
   os . remove ( o0OOoo0OO0OOO )
   xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , 'Se ha producido un error' ) )
 except Exception :
  I1I , oOO00oOO , I1I = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( oOO00oOO ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( oOO00oOO ) ) )
  if 51 - 51: iII111i . iI11I1II1I1I - o0o / o0o00Oo0O
  if 52 - 52: o00O0oo + o0o00Oo0O + o0oOoO00o + IiII % o0oOoO00o
  if ( oo00000o0 . iscanceled ) :
   ventana . url . setLabel ( 'ERROR/SUBIDA CANCELADA: ' + str ( oOO00oOO ) )
   ventana . url . setVisible ( True )
   if 75 - 75: iII111i . Ooo0 . o0o00Oo0O * ooO0Oooo00
   if 4 - 4: i1I1Ii1iI1ii % OOO0o0o * I1Ii111
   if 100 - 100: ooO0Oooo00 * II + II
try :
 OoOO0o = iIIii1IIi ( '' )
 OoOO0o . doModal ( )
 if 1 - 1: Ooo0O
 if 68 - 68: o0oOoO00o - iII111i / ooO0Oooo00 / oo00
 del OoOO0o
except Exception :
 I1I , oOO00oOO , I1I = sys . exc_info ( )
 xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( oOO00oOO ) ) , 2 )
 xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( oOO00oOO ) ) )
 if 12 - 12: i1I1Ii1iI1ii + Ii * iI11I1II1I1I / o0o . oo00
# dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
