import xbmc , xbmcaddon , xbmcgui , xbmcplugin , os
import shutil
oo000 = sys . version_info [ 0 ] >= 3
if ( oo000 ) :
 from io import StringIO
else :
 from StringIO import StringIO
import gzip
import requests
import io
import tempfile
import threading
if 9 - 9: Ii . o0o00Oo0O - iI11I1II1I1I
import pyxbmct
import sys
if 71 - 71: ii
global iIIii1IIi , o0OO00 , oo , i1iII1IiiIiI1 , iIiiiI1IiI1I1 , o0OoOoOO00 , I11i , O0O , Oo
global I1ii11iIi11i
if 48 - 48: oO0o / OOooOOo / I11iIi1I / IiiIII111iI
if 34 - 34: iii1I1I / O00oOoOoO0o0O . O0oo0OO0 + Oo0ooO0oo0oO . I1i1iI1i - II
#import sys
O0O = 'script.kelebek'
if 100 - 100: i11Ii11I1Ii1i . ooO - OOoO / ooo0Oo0 * i1 - OOooo0000ooo
if 79 - 79: I1i1iI1i + i1 . OOooo0000ooo * ooo0Oo0 % i11Ii11I1Ii1i . I11iIi1I
if 94 - 94: OOoO * ooO / ooo0Oo0 . oO0o * OOoO
if 47 - 47: oO0o % Ii
if 20 - 20: OOooo0000ooo * OOooOOo
if 65 - 65: O0oo0OO0 * iI11I1II1I1I * OOooo0000ooo
if ( oo000 ) :
 import zipfile
else :
 from lib import zipfile
 if 18 - 18: iI11I1II1I1I / i11Ii11I1Ii1i + I1i1iI1i / IiiIII111iI - OOooOOo - i11Ii11I1Ii1i
 if 1 - 1: i11Ii11I1Ii1i - II % o0o00Oo0O + I11iIi1I - OOoO / i11Ii11I1Ii1i
 if 31 - 31: iii1I1I + OOooOOo
 if 13 - 13: II * I1i1iI1i * I11iIi1I
 if 55 - 55: OOooOOo
 if 43 - 43: O00oOoOoO0o0O - oO0o + i1 + ooO
Oo = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + O0O , 'icon.png' ) )
I1ii11iIi11i = xbmc . translatePath ( os . path . join ( 'special://home/addons' , O0O , 'resources' ) )
if 17 - 17: O0oo0OO0
o00ooooO0oO = xbmcgui . DialogProgress ( )
oOoOo00oOo = 0
Ooo00O00O0O0O = 0
if 90 - 90: OOooOOo + I1i1iI1i / O0oo0OO0 % OOooOOo - o0o00Oo0O
if 29 - 29: O0oo0OO0 / iI11I1II1I1I
class iIIii1IIi ( pyxbmct . AddonDialogWindow ) :
 if 24 - 24: o0o00Oo0O % O0oo0OO0 + oO0o + i1 + Oo0ooO0oo0oO
 def __init__ ( self , title = '' ) :
  super ( iIIii1IIi , self ) . __init__ ( title )
  self . setGeometry ( 600 , 300 , 4 , 3 )
  self . set_controls ( )
  self . set_navigation ( )
  if 70 - 70: IiiIII111iI % IiiIII111iI . ooo0Oo0 % iii1I1I * O0oo0OO0 % I1i1iI1i
  self . connect ( pyxbmct . ACTION_NAV_BACK , self . close )
  if 23 - 23: Ii + I11iIi1I
 def set_controls ( self ) :
  if 68 - 68: O00oOoOoO0o0O . I1i1iI1i . Ii
  self . fondo = pyxbmct . Image ( os . path . join ( I1ii11iIi11i , 'fondoceleste.png' ) )
  self . placeControl ( self . fondo , 0 , 0 , 4 , 3 )
  if 40 - 40: I1i1iI1i . O00oOoOoO0o0O . IiiIII111iI . oO0o
  if 33 - 33: ooO + OOooOOo % Ii . OOooo0000ooo - I11iIi1I
  O00oooo0O = pyxbmct . Label ( 'Save Youtube APIS' , alignment = pyxbmct . ALIGN_CENTER )
  self . placeControl ( O00oooo0O , 0 , 0 , 1 , 3 )
  if 22 - 22: ii % i11Ii11I1Ii1i - OOoO . iI11I1II1I1I * Ii
  if 32 - 32: IiiIII111iI * o0o00Oo0O % I1i1iI1i % ooO . ooo0Oo0
  self . bguarda = pyxbmct . Button ( 'Local' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( I1ii11iIi11i , 'bgris.png' ) ,
 focusTexture = os . path . join ( I1ii11iIi11i , 'bnaranja.png' ) )
  self . placeControl ( self . bguarda , 1 , 0 )
  if 61 - 61: OOooo0000ooo
  self . connect ( self . bguarda , self . guarda )
  if 79 - 79: IiiIII111iI + I11iIi1I - OOoO
  self . bsube = pyxbmct . Button ( 'Nube' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( I1ii11iIi11i , 'bgris.png' ) ,
 focusTexture = os . path . join ( I1ii11iIi11i , 'bnaranja.png' ) )
  self . placeControl ( self . bsube , 1 , 2 )
  if 83 - 83: OOooo0000ooo
  self . connect ( self . bsube , self . sube )
  if 64 - 64: iii1I1I % OOooo0000ooo % OOoO / O00oOoOoO0o0O - iii1I1I
  self . url = pyxbmct . Label ( '' )
  self . placeControl ( self . url , 2 , 0 , 1 , 3 )
  self . url . setVisible ( False )
  if 74 - 74: OOoO * o0o00Oo0O
  self . bsalir = pyxbmct . Button ( 'Salir' ,
 textColor = '0xFFFBFCFA' ,
 focusedColor = '0xFF238303' ,
 noFocusTexture = os . path . join ( I1ii11iIi11i , 'bgris.png' ) ,
 focusTexture = os . path . join ( I1ii11iIi11i , 'bnaranja.png' ) )
  self . placeControl ( self . bsalir , 3 , 1 )
  if 89 - 89: I1i1iI1i + IiiIII111iI
  self . connect ( self . bsalir , self . close )
  if 3 - 3: oO0o / I11iIi1I % i11Ii11I1Ii1i * Ii / o0o00Oo0O * i11Ii11I1Ii1i
 def set_navigation ( self ) :
  if 49 - 49: I1i1iI1i % ooO + oO0o . I11iIi1I % Oo0ooO0oo0oO
  if 48 - 48: i11Ii11I1Ii1i + i11Ii11I1Ii1i / OOooOOo / iI11I1II1I1I
  if 20 - 20: O0oo0OO0
  if 77 - 77: O00oOoOoO0o0O / i11Ii11I1Ii1i
  if 98 - 98: iI11I1II1I1I / oO0o / Ii / O0oo0OO0
  if 28 - 28: II - ooo0Oo0 . ooo0Oo0 + O00oOoOoO0o0O - ii + o0o00Oo0O
  if 95 - 95: iii1I1I % I1i1iI1i . o0o00Oo0O
  self . bguarda . setNavigation ( self . bsalir , self . bsalir , self . bsube , self . bsube )
  self . bsube . setNavigation ( self . bsalir , self . bsalir , self . bguarda , self . bguarda )
  self . bsalir . setNavigation ( self . bguarda , self . bguarda , self . bguarda , self . bguarda )
  if 15 - 15: OOooo0000ooo / ooO . ooO - oO0o
  if 53 - 53: ooo0Oo0 + I11iIi1I * I1i1iI1i
  self . setFocus ( self . bguarda )
  if 61 - 61: oO0o * II / ii . Ii . O00oOoOoO0o0O
 def setAnimation ( self , control ) :
  if 60 - 60: i11Ii11I1Ii1i / i11Ii11I1Ii1i
  control . setAnimations ( [ ( 'WindowOpen' , 'effect=fade start=0 end=100 time=500' , ) ,
 ( 'WindowClose' , 'effect=fade start=100 end=0 time=500' , ) ] )
 def guarda ( self ) :
  i1iII1IiiIiI1 ( 0 )
  if 46 - 46: ooO * II - iii1I1I * I1i1iI1i - i1
 def sube ( self ) :
  iIiiiI1IiI1I1 ( self )
  if 83 - 83: ii
  if 31 - 31: OOooOOo - II . i1 % O00oOoOoO0o0O - o0o00Oo0O
  if 4 - 4: OOooOOo / OOooo0000ooo . OOoO
def o0OoOoOO00 ( message , seconds ) :
 xbmc . executebuiltin ( 'XBMC.Notification(%s, %s, %s, %s)' % ( 'KELEBEK' , message , str ( seconds ) , Oo ) )
 if 58 - 58: II * Ii / O00oOoOoO0o0O % i1 - Oo0ooO0oo0oO / I1i1iI1i
def I11i ( message , seconds ) :
 ii11i1 = threading . Thread ( target = o0OoOoOO00 , args = ( message , seconds ) )
 ii11i1 . start ( )
 if 29 - 29: Oo0ooO0oo0oO % I11iIi1I + OOooo0000ooo / O0oo0OO0 + II * O0oo0OO0
def o0OO00 ( path , ziph ) :
 global o00ooooO0oO
 global Ooo00O00O0O0O
 global oOoOo00oOo
 try :
  if 42 - 42: ooO + I1i1iI1i
  for o0O0o0Oo , Ii11Ii1I , O00oO in os . walk ( path ) :
   if 39 - 39: ooo0Oo0 - OOooOOo * iii1I1I % O0oo0OO0 * OOooOOo % OOooOOo
   for file in O00oO :
    if ( o00ooooO0oO . iscanceled ( ) ) :
     return
    Ooo00O00O0O0O = Ooo00O00O0O0O + 1
    OoOOOOO = Ooo00O00O0O0O / float ( oOoOo00oOo ) * 100
    o00ooooO0oO . update ( int ( OoOOOOO ) , 'Copiando [COLOR red]%s[/COLOR]' % file + '\n' + 'Por favor, espera...' )
    if ( os . path . exists ( os . path . join ( o0O0o0Oo , file ) ) ) :
     if 33 - 33: Oo0ooO0oo0oO % oO0o
     ziph . write ( os . path . join ( o0O0o0Oo , file ) )
    else :
     xbmc . log ( '[%s] %s %s %s' % ( 'FILE NOT EXISTS:' , o0O0o0Oo , Ii11Ii1I , file ) , 2 )
 except Exception :
  o00OO00OoO , OOOO0OOoO0O0 , o00OO00OoO = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( OOOO0OOoO0O0 ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( OOOO0OOoO0O0 ) ) )
  if 65 - 65: ooo0Oo0 * I11iIi1I + ooO % Ii * I1i1iI1i . i1
def oo ( path , ziph ) :
 try :
  if 100 - 100: o0o00Oo0O + ooo0Oo0 - II + Ii * ooO
  xbmc . log ( 'Intentando zipear ' + path , 2 )
  if ( os . path . exists ( os . path . join ( path ) ) ) :
   if 30 - 30: O0oo0OO0 . ooO - ii
   ziph . write ( path )
  else :
   xbmc . log ( '[%s] %s' % ( 'FILE NOT EXISTS:' , path ) , 2 )
 except Exception :
  o00OO00OoO , OOOO0OOoO0O0 , o00OO00OoO = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( OOOO0OOoO0O0 ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( OOOO0OOoO0O0 ) ) )
  if 8 - 8: oO0o - iI11I1II1I1I * OOooOOo + Ii / i1 % II
  if 16 - 16: Oo0ooO0oo0oO + iii1I1I - OOooOOo
def i1iII1IiiIiI1 ( flag ) :
 if ( flag == 0 ) :
  oOoOO0 = xbmcgui . Dialog ( )
  IiI11iII1 = oOoOO0 . browse ( 3 , 'KELEBEK' , '' )
 else :
  IiI11iII1 = xbmc . translatePath ( 'special://home/addons/' + O0O )
  if 29 - 29: IiiIII111iI - I1i1iI1i - i11Ii11I1Ii1i % OOoO - I1i1iI1i
 try :
  if ( IiI11iII1 != '' ) :
   if 91 - 91: iii1I1I / i11Ii11I1Ii1i - OOooOOo . i11Ii11I1Ii1i
   if 18 - 18: O0oo0OO0
   if ( os . path . exists ( os . path . join ( IiI11iII1 , 'SettingsYT.zip' ) ) ) :
    os . remove ( os . path . join ( IiI11iII1 , 'SettingsYT.zip' ) )
   O0o0O00Oo0o0 = zipfile . ZipFile ( os . path . join ( IiI11iII1 , 'SettingsYT.zip' ) , 'w' , zipfile . ZIP_DEFLATED )
   O00O0oOO00O00 = xbmc . translatePath ( os . path . join ( 'special://home/userdata/addon_data' , 'plugin.video.youtube' ) )
   O00O0oOO00O00 = O00O0oOO00O00 . replace ( '/' , os . path . sep )
   if ( os . path . exists ( O00O0oOO00O00 ) ) :
    os . chdir ( O00O0oOO00O00 )
    oo ( './access_manager.json' . replace ( '/' , os . path . sep ) , O0o0O00Oo0o0 )
    oo ( './api_keys.json' . replace ( '/' , os . path . sep ) , O0o0O00Oo0o0 )
    oo ( './settings.xml' . replace ( '/' , os . path . sep ) , O0o0O00Oo0o0 )
    O0o0O00Oo0o0 . close ( )
    if ( flag == 0 ) :
     I11i ( 'PROCESS FINISHED' , 4000 )
     oOoOO0 . ok ( 'KELEBEK BackUp Settings Youtube' , '[COLOR yellow]File SettingsYT.zip[/COLOR] [COLOR blue]Created [/COLOR]' )
    return True
   else :
    xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'Carpeta no existente:' , O00O0oOO00O00 ) )
    return False
 except Exception :
  o00OO00OoO , OOOO0OOoO0O0 , o00OO00OoO = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( OOOO0OOoO0O0 ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( OOOO0OOoO0O0 ) ) )
  return False
  if 11 - 11: ooo0Oo0 . Oo0ooO0oo0oO
def iIiiiI1IiI1I1 ( ventana ) :
 try :
  if ( i1iII1IiiIiI1 ( 1 ) ) :
   o0 = 'https://api.anonfiles.com/upload'
   oo0oOo = xbmc . translatePath ( os . path . join ( 'special://home/addons/' + O0O , 'SettingsYT.zip' ) )
   o000O0o = open ( oo0oOo , 'rb' )
   O00oO = { 'file' : ( o000O0o ) }
   if 42 - 42: O00oOoOoO0o0O
   IIIi1I1IIii1II = requests . post ( o0 , files = O00oO )
   import json
   O0 = json . loads ( IIIi1I1IIii1II . text )
   if O0 [ 'status' ] :
    ii1ii1ii = O0 [ 'data' ] [ 'file' ] [ 'url' ] [ 'short' ]
    oooooOoo0ooo = O0 [ 'data' ] [ 'file' ] [ 'url' ] [ 'full' ]
    xbmc . log ( '[SUCCESS] Short URL: ' + ii1ii1ii , 2 )
    ventana . url . setLabel ( 'SUBIDO A ' + ii1ii1ii )
    ventana . url . setVisible ( True )
    o000O0o . close ( )
    os . remove ( oo0oOo )
   else :
    I1I1IiI1 = O0 [ 'error' ] [ 'message' ]
    III1iII1I1ii = O0 [ 'error' ] [ 'type' ]
    xbmc . log ( '[ERROR] ' + I1I1IiI1 + ' ' + III1iII1I1ii , 2 )
   if 61 - 61: OOooOOo
   if 64 - 64: OOooo0000ooo / O00oOoOoO0o0O - o0o00Oo0O - i11Ii11I1Ii1i
   if 86 - 86: i11Ii11I1Ii1i % O00oOoOoO0o0O / I11iIi1I / O00oOoOoO0o0O
   if 42 - 42: iii1I1I
   if 67 - 67: i1 . OOoO . o0o00Oo0O
   if 10 - 10: Oo0ooO0oo0oO % Oo0ooO0oo0oO - iI11I1II1I1I / II + ooO
   if 87 - 87: I1i1iI1i * Oo0ooO0oo0oO + II / iI11I1II1I1I / OOoO
   if 37 - 37: OOoO - OOooo0000ooo * I1i1iI1i % Ii - i1
   if 83 - 83: i11Ii11I1Ii1i / I11iIi1I
   if 34 - 34: ooo0Oo0
   if 57 - 57: I1i1iI1i . i11Ii11I1Ii1i . oO0o
   if 42 - 42: i11Ii11I1Ii1i + Oo0ooO0oo0oO % o0o00Oo0O
   if 6 - 6: I1i1iI1i
   if 68 - 68: O00oOoOoO0o0O - iii1I1I
   if 28 - 28: iii1I1I . II / II + IiiIII111iI . Oo0ooO0oo0oO
   if 1 - 1: iI11I1II1I1I / OOooOOo
   if 33 - 33: i11Ii11I1Ii1i
   if 18 - 18: O0oo0OO0 % OOoO * o0o00Oo0O
   if 87 - 87: Ii
   if 93 - 93: Oo0ooO0oo0oO - iii1I1I % Ii . OOoO / OOoO - i1
   if 9 - 9: Oo0ooO0oo0oO / IiiIII111iI - I11iIi1I / ii / iI11I1II1I1I - O0oo0OO0
   if 91 - 91: OOoO % oO0o % iI11I1II1I1I
   if 20 - 20: II % ooO / ooO + ooO
   if 45 - 45: I1i1iI1i - ooo0Oo0 - ii - iii1I1I . OOooOOo / o0o00Oo0O
   if 51 - 51: o0o00Oo0O + OOoO
   if 8 - 8: I1i1iI1i * O00oOoOoO0o0O - ooO - iii1I1I * II % I11iIi1I
   if 48 - 48: o0o00Oo0O
   if 11 - 11: i11Ii11I1Ii1i + ii - iii1I1I / O0oo0OO0 + IiiIII111iI . OOooOOo
  else :
   if 41 - 41: ooO - o0o00Oo0O - o0o00Oo0O
   if 68 - 68: II % i1
   if 88 - 88: iI11I1II1I1I - OOooo0000ooo + II
   if 40 - 40: I11iIi1I * ooO + II % OOoO
   if 74 - 74: I1i1iI1i - IiiIII111iI + ii + i1 / O00oOoOoO0o0O
   if 23 - 23: o0o00Oo0O
   if 85 - 85: ooO
   if 84 - 84: I11iIi1I . iI11I1II1I1I % ii + ooO % ii % iii1I1I
   if 42 - 42: iii1I1I / i11Ii11I1Ii1i / O0oo0OO0 + OOoO / O00oOoOoO0o0O
   if 84 - 84: OOooo0000ooo * OOooOOo + IiiIII111iI
   if 53 - 53: OOoO % OOooOOo . ooo0Oo0 - iI11I1II1I1I - ooo0Oo0 * OOooOOo
   if 77 - 77: iI11I1II1I1I * iii1I1I
   if 95 - 95: I11iIi1I + Ii
   if 6 - 6: OOooo0000ooo / Ii + OOoO * I1i1iI1i
   if 80 - 80: OOooOOo
   if 83 - 83: i11Ii11I1Ii1i . Ii + OOooOOo . O0oo0OO0 * i11Ii11I1Ii1i
   if 53 - 53: OOooOOo
   if 31 - 31: iii1I1I
   if 80 - 80: i1 . Ii - O0oo0OO0
   if 25 - 25: iii1I1I
   if 62 - 62: II + o0o00Oo0O
   if 98 - 98: O0oo0OO0
   if 51 - 51: IiiIII111iI - I1i1iI1i + OOooOOo * ooO . i11Ii11I1Ii1i + I1i1iI1i
   if 78 - 78: Ii / OOoO - ooO / II + I1i1iI1i
   if 82 - 82: ooO
   if 46 - 46: ii . Ii
   if 94 - 94: O0oo0OO0 * ooO / IiiIII111iI / ooO
   if 87 - 87: IiiIII111iI . ooo0Oo0
   if 75 - 75: OOooo0000ooo + O00oOoOoO0o0O + O0oo0OO0 * i11Ii11I1Ii1i % I1i1iI1i . OOoO
   if 55 - 55: II . I11iIi1I
   if 61 - 61: IiiIII111iI % ooo0Oo0 . IiiIII111iI
   if 100 - 100: i1 * o0o00Oo0O
   if 64 - 64: II % iI11I1II1I1I * I1i1iI1i
   if 79 - 79: o0o00Oo0O
   if 78 - 78: Oo0ooO0oo0oO + II - i1
   if 38 - 38: O0oo0OO0 - I1i1iI1i + iI11I1II1I1I / O00oOoOoO0o0O % IiiIII111iI
   if 57 - 57: iii1I1I / OOooo0000ooo
   if 29 - 29: iI11I1II1I1I + O00oOoOoO0o0O * iii1I1I * II . I11iIi1I * I11iIi1I
   if 7 - 7: ooo0Oo0 * i1 % ooO - O0oo0OO0
   xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , 'Se ha producido un error' ) )
 except Exception :
  o00OO00OoO , OOOO0OOoO0O0 , o00OO00OoO = sys . exc_info ( )
  xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( OOOO0OOoO0O0 ) ) , 2 )
  xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( OOOO0OOoO0O0 ) ) )
  if 13 - 13: ooO . Ii
  if 56 - 56: Oo0ooO0oo0oO % o0o00Oo0O - I11iIi1I
try :
 O00o0OO0 = iIIii1IIi ( '' )
 O00o0OO0 . doModal ( )
 if 35 - 35: I1i1iI1i % OOooo0000ooo / i1 + iI11I1II1I1I . ii . I11iIi1I
 if 71 - 71: ooo0Oo0 * OOooOOo * I1i1iI1i
 del O00o0OO0
except Exception :
 o00OO00OoO , OOOO0OOoO0O0 , o00OO00OoO = sys . exc_info ( )
 xbmc . log ( '[%s] %s' % ( 'EXCEPTION:' , str ( OOOO0OOoO0O0 ) ) , 2 )
 xbmc . executebuiltin ( 'Notification(%s, %s)' % ( 'ERROR:' , str ( OOOO0OOoO0O0 ) ) ) # dd678faae9ac167bc83abf78e5cb2f3f0688d3a3
